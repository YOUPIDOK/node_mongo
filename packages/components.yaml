components:
  schemas:
    Recipe:
      type: object
      properties:
        name:
          type: string
        description:
          type: string
        image:
          type: string
        author:
          type: string
        publication_date:
          type: string
        ingredients:
          type: array
          items:
            type: object
            properties:
              nutrition:
                type: object
                properties:
                  name:
                    type: string
                  unit:
                    type: string
                  water:
                    type: number
                  energ_kcal:
                    type: number
                  protein:
                    type: number
                  lipid:
                    type: number
                  carbohydrt:
                    type: number
              quantity:
                type: number
        steps:
          type: array
          items:
            type: object
            properties:
              name:
                type: string
              description:
                type: string

    Nutrition:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        unit:
          type: [ml, g]
        water:
          type: number
        energ_kcal:
          type: number
        protein:
          type: number
        lipid:
          type: number
        carbohydrt:
          type: number
      example:
        id: 64ad484c48f93ea39c37a668
        name: cheese,gjetost,
        unit: g,
        water: 13.44,
        energ_kcal: 466,
        protein: 9.65,
        lipid: 29.51,
        carbohydrt: 42.65,

    User:
      type: object
      properties:
        id:
          type: string
        email:
          type: string
          format: email
        name:
          type: string
        role:
          type: string
          enum: [user, admin]
      example:
        id: 5ebac534954b54139806c112
        email: fake@example.com
        name: fake name
        role: user

    Token:
      type: object
      properties:
        token:
          type: string
        expires:
          type: string
          format: date-time
      example:
        token: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiI1ZWJhYzUzNDk1NGI1NDEzOTgwNmMxMTIiLCJpYXQiOjE1ODkyOTg0ODQsImV4cCI6MTU4OTMwMDI4NH0.m1U63blB0MLej_WfB7yC2FTMnCziif9X8yzwDEfJXAg
        expires: 2020-05-12T16:18:04.793Z

    AuthTokens:
      type: object
      properties:
        access:
          $ref: '#/components/schemas/Token'
        refresh:
          $ref: '#/components/schemas/Token'

    UserWithTokens:
      type: object
      properties:
        user:
          $ref: '#/components/schemas/User'
        tokens:
          $ref: '#/components/schemas/AuthTokens'

    Error:
      type: object
      properties:
        code:
          type: number
        message:
          type: string

  responses:
    DuplicateEmail:
      description: Email already taken
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
          example:
            code: 400
            message: Email already taken
    Unauthorized:
      description: Unauthorized
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
          example:
            code: 401
            message: Please authenticate
    Forbidden:
      description: Forbidden
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
          example:
            code: 403
            message: Forbidden
    NotFound:
      description: Not found
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
          example:
            code: 404
            message: Not found

  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
